strict digraph  {
"sub_source (utility)";
"select_files (io)";
"reduce_FOV (fsl)";
"apply_warp (fsl)";
"get_metadata (utility)";
mrtrix_image;
"sub_grad_files (utility)";
"transform_inverse (fsl)";
"FLIRT (fsl)";
"datasink (io)";
"mrtrix_5ttgen (mrtrix3)";
"fsl_bet (fsl)";
"fsl_epireg (fsl)";
"concat_transform (fsl)";
aff2rigid;
"5tt2wm";
"5tt2gmwmi";
binarize_gmwmi;
transformconvert;
"sub_ApplyMask (fsl)";
mrtransform;
mrgrid;
dwinormalise;
"sub_b0extract (mrtrix3)";
"sub_dwi2mask (mrtrix3)";
dwifslpreproc;
alter_gradient;
modify_gradient;
update_image;
"raw_dwi2mask (mrtrix3)";
dwigradcheck;
mrconvert;
denoise;
"ringing_removal (mrtrix3)";
LowNoiseMap;
"recreate_mask (mrtrix3)";
dwibiascorrect;
NewGradient;
RicianNoise;
ConvertRician;
NoiseComparison;
"dwi2mask (mrtrix3)";
"dwi2tensor (mrtrix3)";
"tensor2metrics (mrtrix3)";
mrthreshold;
"sub_mrmath_mean (mrtrix3)";
sub_dwi2nii;
sub_mask2nii;
"mni_b0extract (mrtrix3)";
"mni_mrmath_mean (mrtrix3)";
mni_dwi2nii;
"mni_dwi2mask (mrtrix3)";
mni_mask2nii;
"mni_ApplyMask (fsl)";
MNI_Outputs;
"sub_source (utility)" -> "select_files (io)";
"select_files (io)" -> "reduce_FOV (fsl)";
"select_files (io)" -> "apply_warp (fsl)";
"select_files (io)" -> "get_metadata (utility)";
"select_files (io)" -> mrtrix_image;
"select_files (io)" -> "sub_grad_files (utility)";
"reduce_FOV (fsl)" -> "transform_inverse (fsl)";
"reduce_FOV (fsl)" -> "FLIRT (fsl)";
"apply_warp (fsl)" -> "datasink (io)";
"apply_warp (fsl)" -> "mrtrix_5ttgen (mrtrix3)";
"apply_warp (fsl)" -> "fsl_bet (fsl)";
"apply_warp (fsl)" -> "fsl_epireg (fsl)";
"get_metadata (utility)" -> dwifslpreproc;
mrtrix_image -> "raw_dwi2mask (mrtrix3)";
mrtrix_image -> dwigradcheck;
mrtrix_image -> mrconvert;
"sub_grad_files (utility)" -> mrtrix_image;
"transform_inverse (fsl)" -> "concat_transform (fsl)";
"FLIRT (fsl)" -> "concat_transform (fsl)";
"mrtrix_5ttgen (mrtrix3)" -> "5tt2wm";
"mrtrix_5ttgen (mrtrix3)" -> "5tt2gmwmi";
"mrtrix_5ttgen (mrtrix3)" -> "datasink (io)";
"fsl_bet (fsl)" -> "fsl_epireg (fsl)";
"fsl_bet (fsl)" -> transformconvert;
"fsl_epireg (fsl)" -> transformconvert;
"concat_transform (fsl)" -> aff2rigid;
aff2rigid -> "apply_warp (fsl)";
"5tt2wm" -> "datasink (io)";
"5tt2gmwmi" -> binarize_gmwmi;
binarize_gmwmi -> "datasink (io)";
transformconvert -> mrtransform;
"sub_ApplyMask (fsl)" -> "fsl_epireg (fsl)";
"sub_ApplyMask (fsl)" -> transformconvert;
mrtransform -> mrgrid;
mrgrid -> "datasink (io)";
mrgrid -> "mni_b0extract (mrtrix3)";
mrgrid -> "mni_dwi2mask (mrtrix3)";
mrgrid -> MNI_Outputs;
dwinormalise -> mrtransform;
dwinormalise -> "sub_b0extract (mrtrix3)";
dwinormalise -> "sub_dwi2mask (mrtrix3)";
"sub_b0extract (mrtrix3)" -> "sub_mrmath_mean (mrtrix3)";
"sub_dwi2mask (mrtrix3)" -> sub_mask2nii;
dwifslpreproc -> alter_gradient;
dwifslpreproc -> modify_gradient;
dwifslpreproc -> update_image;
alter_gradient -> modify_gradient;
modify_gradient -> update_image;
modify_gradient -> "recreate_mask (mrtrix3)";
modify_gradient -> dwibiascorrect;
modify_gradient -> NewGradient;
update_image -> "recreate_mask (mrtrix3)";
update_image -> dwibiascorrect;
"raw_dwi2mask (mrtrix3)" -> dwigradcheck;
dwigradcheck -> mrconvert;
dwigradcheck -> dwifslpreproc;
mrconvert -> denoise;
denoise -> "ringing_removal (mrtrix3)";
denoise -> LowNoiseMap;
"ringing_removal (mrtrix3)" -> dwifslpreproc;
LowNoiseMap -> RicianNoise;
"recreate_mask (mrtrix3)" -> dwibiascorrect;
dwibiascorrect -> NewGradient;
dwibiascorrect -> RicianNoise;
NewGradient -> ConvertRician;
RicianNoise -> NoiseComparison;
ConvertRician -> "dwi2mask (mrtrix3)";
ConvertRician -> "dwi2tensor (mrtrix3)";
ConvertRician -> dwinormalise;
NoiseComparison -> ConvertRician;
"dwi2mask (mrtrix3)" -> "dwi2tensor (mrtrix3)";
"dwi2tensor (mrtrix3)" -> "tensor2metrics (mrtrix3)";
"tensor2metrics (mrtrix3)" -> mrthreshold;
mrthreshold -> dwinormalise;
"sub_mrmath_mean (mrtrix3)" -> sub_dwi2nii;
sub_dwi2nii -> "sub_ApplyMask (fsl)";
sub_mask2nii -> "sub_ApplyMask (fsl)";
"mni_b0extract (mrtrix3)" -> "mni_mrmath_mean (mrtrix3)";
"mni_mrmath_mean (mrtrix3)" -> mni_dwi2nii;
mni_dwi2nii -> "mni_ApplyMask (fsl)";
mni_dwi2nii -> "datasink (io)";
"mni_dwi2mask (mrtrix3)" -> mni_mask2nii;
mni_mask2nii -> "mni_ApplyMask (fsl)";
mni_mask2nii -> "datasink (io)";
"mni_ApplyMask (fsl)" -> "datasink (io)";
MNI_Outputs -> "datasink (io)";
}
